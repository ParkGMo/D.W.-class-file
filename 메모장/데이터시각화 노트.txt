<!DOCTYPE html>
<html lang="ko">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
  </head>
  <style>
    * {
      box-sizing: border-box;
    }
    html,
    body,
    #wrapper {
      width: 100%;
      height: 100%;
    }
    body {
      margin: 0;
    }
  </style>
  <body>
    <div id="wrapper">
      <div id="header"></div>
      <ul id="nav"></ul>
      <div id="main"></div>
      <div id="footer"></div>
    </div>
  </body>
</html>

\\192.168.0.23\공유폴더\DW_DataVisualization3

https://flexboxfroggy.com/#ko 레이아웃연습

@font-face {
      font-family: "SBAggroB";
      src: url("https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_2108@1.1/SBAggroB.woff")
        format("woff");
      font-weight: normal;
      font-style: normal;
    }

font-family: SBAggroB;

스타일 적용 우선순위
        1. important(9999999999999점)
        2. inline style(1000점)
        3. ID 선택자(100점)
        4. class 선택자 (10점)
        5. Tag 선택자(1점)
        6. *(전체)선택자(0점)
        같은 점수는 마지막 선택자를 선택 

a:link{}
a:visited{}
a:hover{}
a:active{}

* {box-sizing: border-box;}
html,body {width: 100%; height: 100%;}

<div id="wrapper">
    <div id="header"></div>
    <ul id="nav"></ul>
    <div id="main"></div>
    <div id="footer"></div>
</div>

노마드 코더 --> 무료강의(NEXT.js)
https://nomadcoders.co/courses

---> 어플래케이션: Flutter 
---> 풀스택 : node, redux

https://boxicons.com/아이콘 사이트
lorem ipsum: test용 문구
lorem picsum: test용 이미지
https://threejs.org/ : 3D 

https://jsonplaceholder.typicode.com/ 객체와 비슷하나 key를 문자("")로 표시한다.
- https://jsonplaceholder.typicode.com/posts/1 : post 방식으로 get한다.  /1은 id가 1인 데이터만 얻는다.

/posts/1 : RESTful API 도메인 형태

관계형DB :  SQL(시스템 규모가 큰경우)
비관계형DB :  noneSQL(시스템 규모가 작은 경우)

부트스트랩 :https://getbootstrap.com/docs/5.2/getting-started/introduction/
css : https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css
Javascript : https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js
Button : https://bootswatch.com/default/


실시간 날씨 API 사이트
https://openweathermap.org/api/one-call-3
API key : 6e3669d9ce0d4e84eddd41c90c38ab37


배포 : 외부에서도 확인할 수 있게 해주는 작업
 - html 파일을 만들어서 -> settings -> pages 
    -> Branch: main 확인 -> docs 저장후, root 저장 -> action deployment 초록체크 -> 배포완료

복붙이나 드래그 안될때!
F12 > Setting(톱니모양) > preferences > Debugger > Disablejavascript

CRUD
C : create
R : read
U : update
D : delete

CSS : Cascading Style Sheet
sass: Syntactical Awesome Style Sheet
scss: Sassy Cascading Style Sheet  

 npm i sass  --> scss사용 가능
scss파일--> rfce : 처음스닛펫 약어

중간 프로젝트 (6/12: 조편성 ~ 6/17: 초안 ~ 6/24: 중간 ~ 7/1:최종)

6/12: 조편성 및 주제선정
- * 주제선정 : 기존 웹 사이트의 불편한점이나 추가할만한 사항 제시
- 가상의 고객! (Persona) : 니즈들~
- 추가 예시들 제시(2page 패션 음식!)
- 프로젝트의 해결책 제시(detail) : **site-map 방식으로 
- 중간 최종까지의 계획방안
- 역할분담!
- *** ppt 준비 6/17까지 ***


* 멘토 (8/7)
(박희성 : jhoo2606@naver.com, 풀스택)

코드 사용 이나 활용 이해 --> 글로 작성해보기 = 면접대비 

디자인 == 성의

기능 == 능력

면접 인적사항, 기능에 대한 질문! ex) 코드 작성 방법보다는 왜 쓰는지(이해!)

프로젝트는 능동적으로  --- 면접에 참고

* 프로젝트를 하면서 발생하는 이슈에 대한 질문!  솔직한 답변 + 수정 과정, 대처에 대한 자세

  포트폴리오를 따로 정리! 
  개인포트폴리오는 규모보다는 완성도!

  경쟁력은 프로젝트!

  질문은 자세히 부분적으로 이해하는 것에서 문제점 제시 ( 정확한 질문 습관!!)
  
  개발자 시간은 경력-스펙! 인정도 높다.

Q? 
  수료하고 난 이후?...
  백엔드 정보 얻는 사이트? 프로그램?
  --> 값이 어떻게 전달 되는지 정도는 알아야한다. 흐름파악!

프로젝트
  디자인 무시X, 깔끔하게 중요!
  홈페이지 참고! (많이 찾아보는 걸로)
  기능 합의점 찾기 + 기준점에 대해 기간보다 짧게! ---> 기능 구현(욕심) 보다는 공부나 복습 위주!



* 포트폴리오
  intro에 자세히 작성!
  교육과성 수업카테고리 배웠던 기술 ....
  학원 기간동안 어떤걸 했는지.(처음 github, 터미널사용, 프로젝트까지!-상세히)

* ERP 시스템 ?
* 잡플래닛 -- 사전 면접 참고


* 멘토
(이서구 대표, elevisor comp)
email: acacia@elevisor.com 
취미, 꿈 
IT는 단순반복작업이 없다. == 지속적인 배움

pc -- Internet -- F/W(침입차단) -- IDS/IPS/WAF -- WEB(WAS와 통일) -- WAS(개발한거 적용) -- Database(오라클)

IT 직업군
프로그래머(타고난 사람), *엔지니어,*영업 ==> 관리자, 기획, 설계 ... (범위가 넓다.)

생성형 AI(모든 지식 학습하여 새로운 걸 생성)
chatGPT, Grok, 라마(오픈소스) (TextToImage, ImageToImage, TextToVideo...)

이미지AI사이트
(stable diffusion)

끌어당김의 법칙

자신을 과거나 미래에 두지말고 현재로 가져와라!

? 
프론트앤드는 어떤일을 하는가? 범위?
AI 따른 인간의 필요성은??..
